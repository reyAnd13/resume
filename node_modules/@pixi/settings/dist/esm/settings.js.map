{"version":3,"file":"settings.js","sources":["../../src/utils/isMobile.ts","../../src/utils/maxRecommendedTextures.ts","../../src/utils/canUploadSameBuffer.ts","../../../constants/src/index.ts","../../src/settings.ts"],"sourcesContent":["// The ESM/CJS versions of ismobilejs only\n// exports the function for executing\n// designed for Node-only environments\nimport isMobileCall from 'ismobilejs';\nimport type { isMobileResult } from 'ismobilejs';\n\nconst isMobile: isMobileResult = isMobileCall(self.navigator);\n\nexport { isMobile };\n","import { isMobile } from './isMobile';\n\n/**\n * The maximum recommended texture units to use.\n * In theory the bigger the better, and for desktop we'll use as many as we can.\n * But some mobile devices slow down if there is to many branches in the shader.\n * So in practice there seems to be a sweet spot size that varies depending on the device.\n *\n * In v4, all mobile devices were limited to 4 texture units because for this.\n * In v5, we allow all texture units to be used on modern Apple or Android devices.\n *\n * @private\n * @param {number} max\n * @returns {number}\n */\nexport function maxRecommendedTextures(max: number): number\n{\n    let allowMax = true;\n\n    if (isMobile.tablet || isMobile.phone)\n    {\n        if (isMobile.apple.device)\n        {\n            const match = (navigator.userAgent).match(/OS (\\d+)_(\\d+)?/);\n\n            if (match)\n            {\n                const majorVersion = parseInt(match[1], 10);\n\n                // Limit texture units on devices below iOS 11, which will be older hardware\n                if (majorVersion < 11)\n                {\n                    allowMax = false;\n                }\n            }\n        }\n        if (isMobile.android.device)\n        {\n            const match = (navigator.userAgent).match(/Android\\s([0-9.]*)/);\n\n            if (match)\n            {\n                const majorVersion = parseInt(match[1], 10);\n\n                // Limit texture units on devices below Android 7 (Nougat), which will be older hardware\n                if (majorVersion < 7)\n                {\n                    allowMax = false;\n                }\n            }\n        }\n    }\n\n    return allowMax ? max : 4;\n}\n","import { isMobile } from './isMobile';\n\n/**\n * Uploading the same buffer multiple times in a single frame can cause performance issues.\n * Apparent on iOS so only check for that at the moment\n * This check may become more complex if this issue pops up elsewhere.\n *\n * @private\n * @returns {boolean}\n */\nexport function canUploadSameBuffer(): boolean\n{\n    return !isMobile.apple.device;\n}\n","/**\n * Different types of environments for WebGL.\n *\n * @static\n * @memberof PIXI\n * @name ENV\n * @enum {number}\n * @property {number} WEBGL_LEGACY - Used for older v1 WebGL devices. PixiJS will aim to ensure compatibility\n *  with older / less advanced devices. If you experience unexplained flickering prefer this environment.\n * @property {number} WEBGL - Version 1 of WebGL\n * @property {number} WEBGL2 - Version 2 of WebGL\n */\nexport enum ENV {\n    WEBGL_LEGACY,\n    WEBGL,\n    WEBGL2,\n}\n\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @memberof PIXI\n * @name RENDERER_TYPE\n * @enum {number}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nexport enum RENDERER_TYPE {\n    UNKNOWN,\n    WEBGL,\n    CANVAS,\n}\n\n/**\n * Bitwise OR of masks that indicate the buffers to be cleared.\n *\n * @static\n * @memberof PIXI\n * @name BUFFER_BITS\n * @enum {number}\n * @property {number} COLOR - Indicates the buffers currently enabled for color writing.\n * @property {number} DEPTH - Indicates the depth buffer.\n * @property {number} STENCIL - Indicates the stencil buffer.\n */\nexport enum BUFFER_BITS {\n    COLOR = 0x00004000,\n    DEPTH = 0x00000100,\n    STENCIL = 0x00000400\n}\n\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @memberof PIXI\n * @name BLEND_MODES\n * @enum {number}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n * @property {number} NORMAL_NPM\n * @property {number} ADD_NPM\n * @property {number} SCREEN_NPM\n * @property {number} NONE\n * @property {number} SRC_IN\n * @property {number} SRC_OUT\n * @property {number} SRC_ATOP\n * @property {number} DST_OVER\n * @property {number} DST_IN\n * @property {number} DST_OUT\n * @property {number} DST_ATOP\n * @property {number} SUBTRACT\n * @property {number} SRC_OVER\n * @property {number} ERASE\n * @property {number} XOR\n */\nexport enum BLEND_MODES {\n    NORMAL = 0,\n    ADD = 1,\n    MULTIPLY = 2,\n    SCREEN = 3,\n    OVERLAY = 4,\n    DARKEN = 5,\n    LIGHTEN = 6,\n    COLOR_DODGE = 7,\n    COLOR_BURN = 8,\n    HARD_LIGHT = 9,\n    SOFT_LIGHT = 10,\n    DIFFERENCE = 11,\n    EXCLUSION = 12,\n    HUE = 13,\n    SATURATION = 14,\n    COLOR = 15,\n    LUMINOSITY = 16,\n    NORMAL_NPM = 17,\n    ADD_NPM = 18,\n    SCREEN_NPM = 19,\n    NONE = 20,\n\n    SRC_OVER = 0,\n    SRC_IN = 21,\n    SRC_OUT = 22,\n    SRC_ATOP = 23,\n    DST_OVER = 24,\n    DST_IN = 25,\n    DST_OUT = 26,\n    DST_ATOP = 27,\n    ERASE = 26,\n    SUBTRACT = 28,\n    XOR = 29,\n}\n\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @memberof PIXI\n * @static\n * @name DRAW_MODES\n * @enum {number}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nexport enum DRAW_MODES {\n    POINTS,\n    LINES,\n    LINE_LOOP,\n    LINE_STRIP,\n    TRIANGLES,\n    TRIANGLE_STRIP,\n    TRIANGLE_FAN,\n}\n\n/**\n * Various GL texture/resources formats.\n *\n * @memberof PIXI\n * @static\n * @name FORMATS\n * @enum {number}\n * @property {number} RGBA=6408\n * @property {number} RGB=6407\n * @property {number} RED=6403\n * @property {number} ALPHA=6406\n * @property {number} LUMINANCE=6409\n * @property {number} LUMINANCE_ALPHA=6410\n * @property {number} DEPTH_COMPONENT=6402\n * @property {number} DEPTH_STENCIL=34041\n */\nexport enum FORMATS {\n    RGBA = 6408,\n    RGB = 6407,\n    ALPHA = 6406,\n    LUMINANCE = 6409,\n    LUMINANCE_ALPHA = 6410,\n    DEPTH_COMPONENT = 6402,\n    DEPTH_STENCIL = 34041,\n}\n\n/**\n * Various GL target types.\n *\n * @memberof PIXI\n * @static\n * @name TARGETS\n * @enum {number}\n * @property {number} TEXTURE_2D=3553\n * @property {number} TEXTURE_CUBE_MAP=34067\n * @property {number} TEXTURE_2D_ARRAY=35866\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_X=34069\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_X=34070\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Y=34071\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Y=34072\n * @property {number} TEXTURE_CUBE_MAP_POSITIVE_Z=34073\n * @property {number} TEXTURE_CUBE_MAP_NEGATIVE_Z=34074\n */\nexport enum TARGETS {\n    TEXTURE_2D = 3553,\n    TEXTURE_CUBE_MAP = 34067,\n    TEXTURE_2D_ARRAY = 35866,\n    TEXTURE_CUBE_MAP_POSITIVE_X = 34069,\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,\n}\n\n/**\n * Various GL data format types.\n *\n * @memberof PIXI\n * @static\n * @name TYPES\n * @enum {number}\n * @property {number} UNSIGNED_BYTE=5121\n * @property {number} UNSIGNED_SHORT=5123\n * @property {number} UNSIGNED_SHORT_5_6_5=33635\n * @property {number} UNSIGNED_SHORT_4_4_4_4=32819\n * @property {number} UNSIGNED_SHORT_5_5_5_1=32820\n * @property {number} FLOAT=5126\n * @property {number} HALF_FLOAT=36193\n */\nexport enum TYPES {\n    UNSIGNED_BYTE = 5121,\n    UNSIGNED_SHORT = 5123,\n    UNSIGNED_SHORT_5_6_5 = 33635,\n    UNSIGNED_SHORT_4_4_4_4 = 32819,\n    UNSIGNED_SHORT_5_5_5_1 = 32820,\n    FLOAT = 5126,\n    HALF_FLOAT = 36193,\n}\n\n/**\n * Various sampler types. Correspond to `sampler`, `isampler`, `usampler` GLSL types respectively.\n * WebGL1 works only with FLOAT.\n *\n * @memberof PIXI\n * @static\n * @name SAMPLER_TYPES\n * @enum {number}\n * @property {number} FLOAT=0\n * @property {number} INT=1\n * @property {number} UINT=2\n */\nexport enum SAMPLER_TYPES {\n    FLOAT = 0,\n    INT = 1,\n    UINT = 2,\n}\n\n/**\n * The scale modes that are supported by pixi.\n *\n * The {@link PIXI.settings.SCALE_MODE} scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @memberof PIXI\n * @static\n * @name SCALE_MODES\n * @enum {number}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nexport enum SCALE_MODES {\n    NEAREST,\n    LINEAR,\n}\n\n/**\n * The wrap modes that are supported by pixi.\n *\n * The {@link PIXI.settings.WRAP_MODE} wrap mode affects the default wrapping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as WebGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @name WRAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nexport enum WRAP_MODES {\n    CLAMP = 33071,\n    REPEAT = 10497,\n    MIRRORED_REPEAT = 33648,\n}\n\n/**\n * Mipmap filtering modes that are supported by pixi.\n *\n * The {@link PIXI.settings.MIPMAP_TEXTURES} affects default texture filtering.\n * Mipmaps are generated for a baseTexture if its `mipmap` field is `ON`,\n * or its `POW2` and texture dimensions are powers of 2.\n * Due to platform restriction, `ON` option will work like `POW2` for webgl-1.\n *\n * This property only affects WebGL.\n *\n * @name MIPMAP_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} OFF - No mipmaps\n * @property {number} POW2 - Generate mipmaps if texture dimensions are pow2\n * @property {number} ON - Always generate mipmaps\n * @property {number} ON_MANUAL - Use mipmaps, but do not auto-generate them; this is used with a resource\n *   that supports buffering each level-of-detail.\n */\nexport enum MIPMAP_MODES {\n    OFF,\n    POW2,\n    ON,\n    ON_MANUAL\n}\n\n/**\n * How to treat textures with premultiplied alpha\n *\n * @name ALPHA_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NO_PREMULTIPLIED_ALPHA - Source is not premultiplied, leave it like that.\n *  Option for compressed and data textures that are created from typed arrays.\n * @property {number} PREMULTIPLY_ON_UPLOAD - Source is not premultiplied, premultiply on upload.\n *  Default option, used for all loaded images.\n * @property {number} PREMULTIPLIED_ALPHA - Source is already premultiplied\n *  Example: spine atlases with `_pma` suffix.\n * @property {number} NPM - Alias for NO_PREMULTIPLIED_ALPHA.\n * @property {number} UNPACK - Default option, alias for PREMULTIPLY_ON_UPLOAD.\n * @property {number} PMA - Alias for PREMULTIPLIED_ALPHA.\n */\nexport enum ALPHA_MODES {\n    NPM = 0,\n    UNPACK = 1,\n    PMA = 2,\n    NO_PREMULTIPLIED_ALPHA = 0,\n    PREMULTIPLY_ON_UPLOAD = 1,\n    PREMULTIPLY_ALPHA = 2,\n}\n\n/**\n * Configure whether filter textures are cleared after binding.\n *\n * Filter textures need not be cleared if the filter does not use pixel blending. {@link CLEAR_MODES.BLIT} will detect\n * this and skip clearing as an optimization.\n *\n * @name CLEAR_MODES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} BLEND - Do not clear the filter texture. The filter's output will blend on top of the output texture.\n * @property {number} CLEAR - Always clear the filter texture.\n * @property {number} BLIT - Clear only if {@link FilterSystem.forceClear} is set or if the filter uses pixel blending.\n * @property {number} NO - Alias for BLEND, same as `false` in earlier versions\n * @property {number} YES - Alias for CLEAR, same as `true` in earlier versions\n * @property {number} AUTO - Alias for BLIT\n */\nexport enum CLEAR_MODES {\n    NO = 0,\n    YES = 1,\n    AUTO = 2,\n    BLEND = 0,\n    CLEAR = 1,\n    BLIT = 2,\n}\n\n/**\n * The gc modes that are supported by pixi.\n *\n * The {@link PIXI.settings.GC_MODE} Garbage Collection mode for PixiJS textures is AUTO\n * If set to GC_MODE, the renderer will occasionally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @name GC_MODES\n * @enum {number}\n * @static\n * @memberof PIXI\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nexport enum GC_MODES {\n    AUTO,\n    MANUAL,\n}\n\n/**\n * Constants that specify float precision in shaders.\n *\n * @name PRECISION\n * @memberof PIXI\n * @constant\n * @static\n * @enum {string}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nexport enum PRECISION {\n    LOW = 'lowp',\n    MEDIUM = 'mediump',\n    HIGH = 'highp',\n}\n\n/**\n * Constants for mask implementations.\n * We use `type` suffix because it leads to very different behaviours\n *\n * @name MASK_TYPES\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - Mask is ignored\n * @property {number} SCISSOR - Scissor mask, rectangle on screen, cheap\n * @property {number} STENCIL - Stencil mask, 1-bit, medium, works only if renderer supports stencil\n * @property {number} SPRITE - Mask that uses SpriteMaskFilter, uses temporary RenderTexture\n */\nexport enum MASK_TYPES {\n    NONE = 0,\n    SCISSOR = 1,\n    STENCIL = 2,\n    SPRITE = 3,\n}\n\n/**\n * Constants for multi-sampling antialiasing.\n *\n * @see PIXI.Framebuffer#multisample\n *\n * @name MSAA_QUALITY\n * @memberof PIXI\n * @static\n * @enum {number}\n * @property {number} NONE - No multisampling for this renderTexture\n * @property {number} LOW - Try 2 samples\n * @property {number} MEDIUM - Try 4 samples\n * @property {number} HIGH - Try 8 samples\n */\nexport enum MSAA_QUALITY {\n    NONE = 0,\n    LOW = 2,\n    MEDIUM = 4,\n    HIGH = 8\n}\n","import { isMobile } from './utils/isMobile';\nimport { maxRecommendedTextures } from './utils/maxRecommendedTextures';\nimport { canUploadSameBuffer } from './utils/canUploadSameBuffer';\nimport { GC_MODES, MIPMAP_MODES, PRECISION, SCALE_MODES, WRAP_MODES } from '@pixi/constants';\nimport type { ENV } from '@pixi/constants';\n\nexport interface IRenderOptions {\n    view: HTMLCanvasElement;\n    antialias: boolean;\n    autoDensity: boolean;\n    backgroundColor: number;\n    backgroundAlpha: number;\n    useContextAlpha: boolean | 'notMultiplied';\n    clearBeforeRender: boolean;\n    preserveDrawingBuffer: boolean;\n    width: number;\n    height: number;\n    legacy: boolean;\n}\n\nexport interface ISettings {\n    MIPMAP_TEXTURES: MIPMAP_MODES;\n    ANISOTROPIC_LEVEL: number;\n    RESOLUTION: number;\n    FILTER_RESOLUTION: number;\n    SPRITE_MAX_TEXTURES: number;\n    SPRITE_BATCH_SIZE: number;\n    RENDER_OPTIONS: IRenderOptions;\n    GC_MODE: GC_MODES;\n    GC_MAX_IDLE: number;\n    GC_MAX_CHECK_COUNT: number;\n    WRAP_MODE: WRAP_MODES;\n    SCALE_MODE: SCALE_MODES;\n    PRECISION_VERTEX: PRECISION;\n    PRECISION_FRAGMENT: PRECISION;\n    CAN_UPLOAD_SAME_BUFFER: boolean;\n    CREATE_IMAGE_BITMAP: boolean;\n    ROUND_PIXELS: boolean;\n    RETINA_PREFIX?: RegExp;\n    FAIL_IF_MAJOR_PERFORMANCE_CAVEAT?: boolean;\n    UPLOADS_PER_FRAME?: number;\n    SORTABLE_CHILDREN?: boolean;\n    PREFER_ENV?: ENV;\n    STRICT_TEXTURE_CACHE?: boolean;\n    MESH_CANVAS_PADDING?: number;\n    TARGET_FPMS?: number;\n}\n\n/**\n * User's customizable globals for overriding the default PIXI settings, such\n * as a renderer's default resolution, framerate, float precision, etc.\n * @example\n * // Use the native window resolution as the default resolution\n * // will support high-density displays when rendering\n * PIXI.settings.RESOLUTION = window.devicePixelRatio;\n *\n * // Disable interpolation when scaling, will make texture be pixelated\n * PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n * @namespace PIXI.settings\n */\nexport const settings: ISettings = {\n\n    /**\n     * If set to true WebGL will attempt make textures mimpaped by default.\n     * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n     *\n     * @static\n     * @name MIPMAP_TEXTURES\n     * @memberof PIXI.settings\n     * @type {PIXI.MIPMAP_MODES}\n     * @default PIXI.MIPMAP_MODES.POW2\n     */\n    MIPMAP_TEXTURES: MIPMAP_MODES.POW2,\n\n    /**\n     * Default anisotropic filtering level of textures.\n     * Usually from 0 to 16\n     *\n     * @static\n     * @name ANISOTROPIC_LEVEL\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 0\n     */\n    ANISOTROPIC_LEVEL: 0,\n\n    /**\n     * Default resolution / device pixel ratio of the renderer.\n     *\n     * @static\n     * @name RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    RESOLUTION: 1,\n\n    /**\n     * Default filter resolution.\n     *\n     * @static\n     * @name FILTER_RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    FILTER_RESOLUTION: 1,\n\n    /**\n     * The maximum textures that this device supports.\n     *\n     * @static\n     * @name SPRITE_MAX_TEXTURES\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 32\n     */\n    SPRITE_MAX_TEXTURES: maxRecommendedTextures(32),\n\n    // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n    // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n    /**\n     * The default sprite batch size.\n     *\n     * The default aims to balance desktop and mobile devices.\n     *\n     * @static\n     * @name SPRITE_BATCH_SIZE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 4096\n     */\n    SPRITE_BATCH_SIZE: 4096,\n\n    /**\n     * The default render options if none are supplied to {@link PIXI.Renderer}\n     * or {@link PIXI.CanvasRenderer}.\n     *\n     * @static\n     * @name RENDER_OPTIONS\n     * @memberof PIXI.settings\n     * @type {object}\n     * @property {HTMLCanvasElement} view=null\n     * @property {boolean} antialias=false\n     * @property {boolean} autoDensity=false\n     * @property {boolean} useContextAlpha=true\n     * @property {number} backgroundColor=0x000000\n     * @property {number} backgroundAlpha=1\n     * @property {boolean} clearBeforeRender=true\n     * @property {boolean} preserveDrawingBuffer=false\n     * @property {number} width=800\n     * @property {number} height=600\n     * @property {boolean} legacy=false\n     */\n    RENDER_OPTIONS: {\n        view: null,\n        antialias: false,\n        autoDensity: false,\n        backgroundColor: 0x000000,\n        backgroundAlpha: 1,\n        useContextAlpha: true,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false,\n        width: 800,\n        height: 600,\n        legacy: false,\n    },\n\n    /**\n     * Default Garbage Collection mode.\n     *\n     * @static\n     * @name GC_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.GC_MODES}\n     * @default PIXI.GC_MODES.AUTO\n     */\n    GC_MODE: GC_MODES.AUTO,\n\n    /**\n     * Default Garbage Collection max idle.\n     *\n     * @static\n     * @name GC_MAX_IDLE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 3600\n     */\n    GC_MAX_IDLE: 60 * 60,\n\n    /**\n     * Default Garbage Collection maximum check count.\n     *\n     * @static\n     * @name GC_MAX_CHECK_COUNT\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 600\n     */\n    GC_MAX_CHECK_COUNT: 60 * 10,\n\n    /**\n     * Default wrap modes that are supported by pixi.\n     *\n     * @static\n     * @name WRAP_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.WRAP_MODES}\n     * @default PIXI.WRAP_MODES.CLAMP\n     */\n    WRAP_MODE: WRAP_MODES.CLAMP,\n\n    /**\n     * Default scale mode for textures.\n     *\n     * @static\n     * @name SCALE_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.SCALE_MODES}\n     * @default PIXI.SCALE_MODES.LINEAR\n     */\n    SCALE_MODE: SCALE_MODES.LINEAR,\n\n    /**\n     * Default specify float precision in vertex shader.\n     *\n     * @static\n     * @name PRECISION_VERTEX\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.HIGH\n     */\n    PRECISION_VERTEX: PRECISION.HIGH,\n\n    /**\n     * Default specify float precision in fragment shader.\n     * iOS is best set at highp due to https://github.com/pixijs/pixi.js/issues/3742\n     *\n     * @static\n     * @name PRECISION_FRAGMENT\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.MEDIUM\n     */\n    PRECISION_FRAGMENT: isMobile.apple.device ? PRECISION.HIGH : PRECISION.MEDIUM,\n\n    /**\n     * Can we upload the same buffer in a single frame?\n     *\n     * @static\n     * @name CAN_UPLOAD_SAME_BUFFER\n     * @memberof PIXI.settings\n     * @type {boolean}\n     */\n    CAN_UPLOAD_SAME_BUFFER: canUploadSameBuffer(),\n\n    /**\n     * Enables bitmap creation before image load. This feature is experimental.\n     *\n     * @static\n     * @name CREATE_IMAGE_BITMAP\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    CREATE_IMAGE_BITMAP: false,\n\n    /**\n     * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n     * The main disadvantage is movement of objects may appear less smooth.\n     *\n     * @static\n     * @constant\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    ROUND_PIXELS: false,\n};\n"],"names":[],"mappings":"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"}